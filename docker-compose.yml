version: '3.8'

services:
  backend:
    env_file:
      - .env
    image: jathurt/myapp-backend-hotel-bookings:latest
    container_name: myapp-backend-hotel
    ports:
      - "${SERVER_PORT:-8081}:8081"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - myapp-network-hotel
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: myapp-mysql-hotel
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=phegon_hotel_db
      - MYSQL_USER=${SPRING_DATASOURCE_USERNAME}
      - MYSQL_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - myapp-network-hotel
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  prometheus:
    image: prom/prometheus:latest
    container_name: myapp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - myapp-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: myapp-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - myapp-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  myapp-network-hotel:
    driver: bridge

volumes:
  mysql-data:
    name: myapp-mysql-data
  prometheus-data:
    name: myapp-prometheus-data
  grafana-data:
    name: myapp-grafana-data
